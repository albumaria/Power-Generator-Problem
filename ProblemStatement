The following scenario is given:

We have a power generator that generates different amount of power,
depending on the fuels its fed, however along power the generator also gains
heat depending on the fuel its fed.

The generator has 2 types of pumps attached to it, that can pump either
fuel to generate power or coolant to cool down the generator.

At the start of the process the generator sits at room temperature.

The pumps that feed fuel to the generator cannot feed more than a set amount
in one go and each has its own capacity and fuel type, that  will determine the
power output of the generator and the mount of heat gain per unit of fuel
fed.

The generator can only be fed fuel by one pump at the time.

Once the generator reaches a critical temperature or above all pumps feeding
fuel will stop and the pumps feeding coolant will start.

Each coolant pump has its own capacity and they each can feed a maximum amount
of coolant in one go, however they all use the same coolant, which determines
the temperature reduction of the generator per unit of coolant feed.

The generator can only be feed coolant by one pump at the time.

Once the coolant pumps start they will keep cooling the generator until the
temperature of the generator gets below the room temperature.

Once the generator gets back to the room temperature or below the colant pumps
will stop and the fuel pumps will star again.

This process will repeat until either all the fuel pumps are empty or all
the coolant pumps fail to bring the generator below room temperature.

Write a c program that simulates the above scenario using threads as
follows:

  * each pump is simulated by a thread

  * each thread receives the following data as arguments:
     > the fuel capacity
     > amount of fuel it ca feed to the generator in one go
     > fuel specifications
        > amount of heat and power generated per unit of fuel in case of fuel pumps
        > amount of heat reduction per unit of fuel in case of coolant pumps

  * all the input data is given as command line arguments as follows:

    ./program RT CT NFP NCP { [ FC FF PG HG] NFP times } { [FC FF HR ] NCP times

    RT  = room temperature
    CT  = generator critical temperature
    NFP = number of fuel pumps
    NCP = number of coolant pumps
    FC  = fuel capacity
    FF  = amount of fuel it can feed in one go
    PG  = power generated per unit of fuel
    HG  = heat gain per unit of fuel
    HR  = heat reduction per unit of fuel

  * at the end of the cycles each fuel pump will display a report showing the
amount of power generated by set pump and its remining fuel reserve, if any


Notes:
 * the program must be compiled using the gcc -Wall -g command without
displaying any warnings or syntax errors
 * all access to sensible memory segment must be consistently and optimally
synchronized
 * all synchronization mechanisms must be properly initialized and cleared
 * during the execution of the program all threads will display messages on
the standard output so we can follow the execution of set threads
 * no memory lacks and/or runtime errors/charges are allowed.

